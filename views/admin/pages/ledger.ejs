<%- contentFor('HeaderCss') %>
	<style>
		.pdf-button-container {
			display: flex;
			justify-content: end;
			margin: 10px;
			/* Add margin around the PDF button */
		}
	</style>

	<%- contentFor('body') %>
		<div class="container-fluid px-4">
			<!-- Page Heading -->
			<div class="d-flex align-items-center mb-4 mb-md-5">
				<h1 class="h3 mb-0 text-gray-800 fw-bold">Company Ledger</h1>
			</div>
			<div class="card-body">
				<div class="mb-3 row">
					<label class="col-md-2 col-form-label">Company Name :</label>
					<div class="col-md-10">
						<select id="company_name" class="form-control form_control" placeholder="Select company"
							name="company_name" required>
							<option value="" selected disabled hidden>Select company</option>
							<% for(let i=0; i<companyName.length; i++) {%>
								<option value="<%=companyName[i].company_name%>">
									<%=companyName[i].company_name%>
								</option>
								<% } %>
						</select>
					</div>
				</div>
			</div>
			<!-- Content Row -->
			<div class="row">
				<div class="col-12">
					<div class="card user-table">
						<div class="card-body">
							<table id="documents_table" class="table table-bordered table-striped">
								<thead>
									<tr>
										<td>Id</td>
										<td>Number</td>
										<td>Company Name</td>
										<td>Invoice Amount</td>
										<!-- <td>Invoice Tax</td> -->
										<td>createdAt</td>
										<!-- <td>Action</td> -->
										<td>Payment Status</td>
									</tr>
								</thead>
								<tbody></tbody>
							</table>
						</div>
					</div>
				</div>
			</div>
		</div>

		<script src="/plugins/tinymce/js/tinymce/tinymce.min.js"></script>
		<%- contentFor('FooterJs') %>

			<script>
				let ledgerDataTable = $("#documents_table").DataTable({
					lengthMenu: [
						[10, 25, 50, -1],
						[10, 25, 50, "All"]
					],
					iDisplayLength: 10,
					bDestroy: true,
					dom: 'l <"pdf-button-container"Bf>rtip',
					autoWidth: false,
					scrollX: true,
					processing: true,
					bSort: false,
					serverSide: true,
					caseInsensitive: true,
					language: {
						"loadingRecords": "&nbsp;",
						"processing": "Loading..."
					},
					buttons: [
						{
							extend: 'pdfHtml5',
							filename: function () {
								return $("#company_name").val() + '_ledger_data'; // Dynamically set filename
							},
							customize: function (doc) {
								// Modify the document content here
								// Remove unwanted columns (1st column index is 0)
								doc.content[1].table.body.forEach(function (row) {
									row.splice(0, 1); // Remove first column
								});
							}
						}
					],
					serverMethod: 'POST',
					ajax: {
						"url": "/admin/ledger/find",
						"data": function () {
							// Pass selected company name from dropdown
							return { company_name: $('#company_name').val() };
						}
					},
					columns: [{
						data: "",
						defaultContent: "-"
					}, {
						data: null,
						defaultContent: "-",
						render: function (data, type, row, meta) {
							// Assuming 'from_number' is the column containing the PDF filename
							var pdfFileName = row.from_number + "_pdf.pdf";

							// Construct the relative path to the PDF file
							var pdfPath = "/uploads/pdf/" + pdfFileName;

							// Generate a link with the PDF path and display 'from_number' as the link text
							var linkHtml = '<a href="' + pdfPath + '" target="_blank">' + row.from_number + '</a>';

							return linkHtml;
						}
					}, {
						data: null,
						defaultContent: "-",
						render: function (data) {
							return data.company_name;
						}
					}, {
						data: null,
						defaultContent: "-",
						render: function (data) {
							return data.invoice_total;
						}
					},
					// {
					// 	data: null,
					// 	defaultContent: "-",
					// 	render: function (data) {
					// 		return data.total_tax;
					// 	}
					// },
					{
						data: null,
						defaultContent: "-",
						render: function (data) {
							return data.createdAt;
						}
					},
					// {
					// 	data: null,
					// 	defaultContent: "-",
					// 	render: function (data, type, row, meta) {
					// 		var editHTML = '<center>';
					// 		editHTML += `<div id= 'payment_status' className='form-check'>
					// 			<button type="button" id = "paymentStatusPaid" class="btn btn-success btn-sm" value="Paid" data-id="${data._id}">Paid</button>
					// 			<button type="button" id = "paymentStatusUnpaid" class="btn btn-danger btn-sm" value="Unpaid" data-id="${data._id}">Unpaid</button>
					// </div>`;
					// 		return editHTML;
					// 	}
					// },
					{
						data: null,
						defaultContent: "-",
						render: function (data, type, row, meta) {
							var editHTML = '<center>';
							if (row.payment_status === "Paid") {
								editHTML += `<span class="badge rounded-pill bg-success">Done</span>`;
							} else {
								editHTML += `<span class="badge rounded-pill bg-danger">Unpaid</span>`;
							}
							return editHTML;
						}
					}
					],
					fnRowCallback: function (nRow, aData, iDisplayIndex) {
						var oSettings = ledgerDataTable.settings()[0];
						$("td:first", nRow).html(oSettings._iDisplayStart + iDisplayIndex + 1);
						nRow.id = aData.id;
						return nRow;
					},
				});

				$('#company_name').on('change', function () {
					ledgerDataTable.ajax.reload(null, false);
				});

				$.ajax({
					url: '/admin/adminInvoiceTotal',
					method: 'GET',
					success: function (data) {
						console.log(data);
						if (data && data.success && data.data && typeof data.data.totalSum === 'number') {
							$("#invoicedAmount").text(data.data.totalSum);
							$("#taxAmount").text(data.data.totalTax);
						} else {
							console.error('Invalid data structure or totalSum is not a number:', data);
						}
					},
					error: function (error) {
						console.error('Error fetching data:', error);
					}
				});

			</script>